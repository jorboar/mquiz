<h1>Welcome to the game zone</h1>
	<p>
		
		<button id="btn">Click me brother</button>

	</p>




<script>
	
	class note {
		constructor(name, label, hertz, steps) {
			this.name = name;
			this.label = label;
			this.hertz = hertz;
			this.steps = steps;
		}
	};

	let note1 = new note("?", "root", 440, 0);
	let note2 = new note("", "", 440, 0);


	var notenames = ["A", "A#", "B", "C", "C#", "D", "D#", "E", "F", "F#", "G", "G#"];

	

	

	var intervals = [
		[2, "Second"],
		[3, "Minor Third"],
		[4, "Major Third"],
		[5, "Fourth"],
		[6, "Flatted Fifth"],
		[7, "Fifth"],
		[10, "Minor Seventh"],
		[11, "Major Seventh"],
		[12, "Octave"],
		[14, "Ninth"]
	];

	var audioctx = new AudioContext();



	let btn = document.getElementById('btn');
	
	btn.addEventListener('click', function buttonClicked(){
		

		
		genData(note1, true);
		genData(note2, false);


		playTone(note1);
		playTone(note2);

		setTimeout(function(){playTone(note1);}, 2000);
		setTimeout(function(){playTone(note2);}, 3500);
		
	});


	//plays tone at given hertz
	function playTone(note){
		
		if (note.label == "root") {
			console.log("-----playing the " + note.label + ", " + note.name + ", " + "at " + note.hertz + " hertz");
		} else {
			console.log("-----playing " + note.name + " at " + note.hertz + " hertz");
		}
		

		var oscillator = audioctx.createOscillator();
		var gainNode = audioctx.createGain();


		oscillator.type = 'square';
		oscillator.frequency.setValueAtTime(note.hertz, audioctx.currentTime);


		//oscillator.connect(audioctx.destination);
		gainNode.connect(audioctx.destination);
		oscillator.connect(gainNode);


		oscillator.start(audioctx.currentTime);
		gainNode.gain.setValueAtTime(0.01, audioctx.currentTime);
		oscillator.stop(audioctx.currentTime + 1);
	}


	//generates note object data
	//initial should be set to true if root note
	function genData(note, initial){

		if (initial) {
			note.hertz = 440;
			note.label = "root";
			note.steps = randNum(-12,12);
			
			mod = note.steps;
		} else {
			number = randNum(0,9);
			
			note.hertz = note1.hertz
			note.label = intervals[number][1];
			note.steps = intervals[number][0];
			
			mod = note.steps + note1.steps;
		}


		while (11 < mod) {
			mod = mod - 12;
		}

		while (0 > mod) {
			mod = mod + 12;
		}

		
		note.name = notenames[mod];

		const a = Math.pow(2, 1/12)
	
		note.hertz = note.hertz * Math.pow(a, note.steps);
		

		if (initial) {
			console.log("Got a(n) " + note.name + ", which is the " + note.label);
		} else {
			console.log("Got a(n) " + note.label + ", which is " + note.steps + " halfsteps from the root" );
		}

	}


	function randNum(min, max) {
  		return Math.floor(Math.random() * (max - min + 1) ) + min;
	}


	//oscillator.onended = function(){
	//	oscillator.disconnect(audioctx.destination);
	//	console.log("HEY");
	//}

	


</script>