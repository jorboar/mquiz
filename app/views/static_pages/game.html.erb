<h1>INTERVAL QUIZ</h1>

	<p>
		<div class = "data2"></div>
		<div class = "data"></div>
		<button id="start_quiz">Start Quiz</button>
		<div class = "response"></div>

		<div id="playbackSpot"></div>

	</p>

	<form id="myform">
		ANSWER:<input type="text" id="useranswer"/>
		<input type="submit" />
	</form>

<script>
	
	class Note {
		constructor(name, label, hertz, steps) {
			this.name = name;
			this.label = label;
			this.hertz = hertz;
			this.steps = steps;
		}
	};

	class Quiz {
		constructor(question_total){
			this.question_total = question_total;
			this.strikes = 0;
			this.array = new Array(question_total);
		}

		get_question(id){
			return this.array[id]
		}

		set_question(id,question){
			this.array[id] = question;
		}

		get_strikes(){
			return this.strikes;
		}

		add_strike(){
			this.strikes = this.strikes + 1;
		}

		get_question_total(){
			return this.question_total;
		}

	};

	class Question {

		constructor(note1, note2){
			this.note1 = note1;
			this.note2 = note2;
			this.answer = note2.label;
			this.submittedanswer = "";
		}

		get_answer(){
			return this.answer
		}

		get_submittedanswer(){
			return this.submittedanswer
		}
		
		set_submittedanswer(x){
			this.submittedanswer = x;
		}

		check_answer(){
			if (this.answer === this.submittedanswer){
				this.correct = true;
				
				response.html("CORRECT");

				console.log("CORRECT");
			} else {
				this.correct = false;
				
				response.html("INCORRECT");

				console.log("INCORRECT")
			}
			return this.correct
		}

	};

	
	let note1 = new Note("A", "root", 440, 0);
	let note2 = new Note("", "", 440, 0);

	var notenames = ["A", "A#", "B", "C", "C#", "D", "D#", "E", "F", "F#", "G", "G#"];

	var gimme = ""
	
	var response = $('.response');
	var dataElement = $('.data');
	var dataElement2 = $('.data2');
	var startQuiz = document.getElementById("start_quiz");
	var note1button = document.getElementById("note1button");


	//used to communicate question index number to various functions
	var current_question = 0; 

	var intervals = [
		[2, "Second"],
		[3, "Minor Third"],
		[4, "Major Third"],
		[5, "Fourth"],
		[6, "Flatted Fifth"],
		[7, "Fifth"],
		[10, "Minor Seventh"],
		[11, "Major Seventh"],
		[12, "Octave"],
		[14, "Ninth"]
	];

	var audioctx = new AudioContext();

	//let btn = document.getElementById('btn');	

	thequiz = new Quiz(5);
	
	//presents question and increases current_question
	start_quiz.addEventListener('click', function(){

		present_question(current_question,thequiz)

		var note1button = document.createElement("BUTTON");
		var t = document.createTextNode("Play Note One");
		note1button.appendChild(t);
		document.getElementById("playbackSpot").appendChild(note1button);

		note1button.addEventListener('click', function(){

			playTone(thequiz.get_question(current_question).note1);


		});


		var note2button = document.createElement("BUTTON");
		var t = document.createTextNode("Play Note Two");
		note2button.appendChild(t);
		document.getElementById("playbackSpot").appendChild(note2button);

		note2button.addEventListener('click', function(){

			playTone(thequiz.get_question(current_question).note2);


		});

		var note1and2button = document.createElement("BUTTON");
		var t = document.createTextNode("Play Both Notes");
		note1and2button.appendChild(t);
		document.getElementById("playbackSpot").appendChild(note1and2button);

		note1and2button.addEventListener('click', function(){

			playTone(thequiz.get_question(current_question).note1);
			playTone(thequiz.get_question(current_question).note2);

		});

		startQuiz.remove();		

	});


	//action on form submit
	//runs answer function
	$(document).ready(function (){
		$('#myform').on('submit', function(e){
			e.preventDefault();
			console.log("Grabbed form stuff");
			gimme = document.getElementById("useranswer").value;
			answer(current_question,thequiz,gimme);
		});
	});


	//generates two notes for question and assigns them to quiz on given index
	//also plays the two notes
	function genQuestion(index,quiz){

		genData(true);
		genData(false);
		let question = new Question(note1,note2);
		quiz.set_question(index,question);
		
		playTone(thequiz.get_question(index).note1);
		playTone(thequiz.get_question(index).note2);

		setTimeout(function(){playTone(note1);}, 2000);
		setTimeout(function(){playTone(note2);}, 3500);

	}


	//plays tone at given hertz
	function playTone(note){
		
		if (note.label == "root") {
			console.log("-----playing the " + note.label + ", " + note.name + ", " + "at " + note.hertz + " hertz");
		} else {
			console.log("-----playing " + note.name + " at " + note.hertz + " hertz");
		}

		var oscillator = audioctx.createOscillator();
		var gainNode = audioctx.createGain();

		oscillator.type = 'sawtooth';
		oscillator.frequency.setValueAtTime(note.hertz, audioctx.currentTime);

		//oscillator.connect(audioctx.destination);
		gainNode.connect(audioctx.destination);
		oscillator.connect(gainNode);

		oscillator.start(audioctx.currentTime);
		gainNode.gain.setValueAtTime(0.01, audioctx.currentTime);
		oscillator.stop(audioctx.currentTime + 1);
	}


	//generates note object data
	//initial should be set to true if root note
	function genData(initial){

		if (initial) {
			hertz = 440;
			label = "root";
			steps = randNum(-12,12);
			
			mod = steps;
		} else {
			number = randNum(0,9);
			
			hertz = note1.hertz
			label = intervals[number][1];
			steps = intervals[number][0];
			
			mod = steps + note1.steps;
		}

		while (11 < mod) {
			mod = mod - 12;
		}

		while (0 > mod) {
			mod = mod + 12;
		}
		
		name = notenames[mod];

		const a = Math.pow(2, 1/12)
	
		hertz = hertz * Math.pow(a, steps);
		

		if (initial) {
			note1 = new Note(name, label, hertz, steps);
			console.log("Got a(n) " + note1.name + ", which is the " + note1.label);
			
		} else {
			note2 = new Note(name, label, hertz, steps);
			console.log("Got a(n) " + note2.label + ", which is " + note2.steps + " halfsteps from the root" );
		}
	}

	//generates question using genQuestion function and presents it to page
	function present_question(index,quiz){

		genQuestion(index,quiz);

		dataElement2.html("Question #" + index + " of " + quiz.question_total + ". User has " + quiz.strikes + " strikes.");

		dataElement.html(" Got a(n) " + note1.name + " as the  " + note1.label + ". The second note is a(n) " + note2.label + " (" + note2.name + "), which is " + note2.steps + " halfsteps from the root" );
	}


	//checks answer ("input") of given question index per quiz object
	//increase current_question variable by 1
	function answer(index, quiz, input) {
		
		quiz.get_question(index).set_submittedanswer(input);
		
		//adds strike to quiz if answer is incorrect
		if(!quiz.get_question(index).check_answer()){
			quiz.add_strike();
		}
		
		//current_question = current_question + 1;

		current_question = current_question + 1;

		present_question(current_question,thequiz)
	}


	//generates a random number on or between minimum to maximum
	function randNum(min, max) {
  		return Math.floor(Math.random() * (max - min + 1) ) + min;
	}


	//oscillator.onended = function(){
	//	oscillator.disconnect(audioctx.destination);
	//	console.log("HEY");
	//}

	


</script>