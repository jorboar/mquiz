<h1>Welcome to the game zone</h1>

	<p>
		<div class = "data"></div>
		<button id="btn">Create note set</button>
		<button id="btn2">Populate</button>
		<button id="btn3">Start New Quiz</button>
		<button id="foo">Some text</button>

		<div class = "response"></div>
	</p>
	<p id="display">
		Howdy hey
	</p>


	<form id="myform">
		answer:<input type="text" id="useranswer"/>
		<input type="submit" />
	</form>


<script>
	
	class Note {
		constructor(name, label, hertz, steps) {
			this.name = name;
			this.label = label;
			this.hertz = hertz;
			this.steps = steps;
		}
	};

	class Quiz {
		constructor(question_total){
			this.question_total = question_total;
			this.strikes = 0;
			this.array = new Array(question_total);
			
		}

		get_question(id){
			return this.array[id]
		}

		set_question(id,question){
			this.array[id] = question;
		}



	};



	class Question {

		constructor(note1, note2){
			this.note1 = note1;
			this.note2 = note2;
			this.answer = note2.label;
			
		}

		get_answer(){
			return this.answer
		}
		
	};

	


	let note1 = new Note("A", "root", 440, 0);
	let note2 = new Note("", "", 440, 0);

	var notenames = ["A", "A#", "B", "C", "C#", "D", "D#", "E", "F", "F#", "G", "G#"];

	var intervals = [
		[2, "Second"],
		[3, "Minor Third"],
		[4, "Major Third"],
		[5, "Fourth"],
		[6, "Flatted Fifth"],
		[7, "Fifth"],
		[10, "Minor Seventh"],
		[11, "Major Seventh"],
		[12, "Octave"],
		[14, "Ninth"]
	];

	var audioctx = new AudioContext();

	//let btn = document.getElementById('btn');	

	btn3.addEventListener('click', function(){
		thequiz = new Quiz(5);

		genQuestion(0);

		genQuestion(1);

		

	});




	btn2.addEventListener('click', function(){
		var dataElement = $('.data');
		dataElement.html("Got a(n) " + note1.name + " as the  " + note1.label + ". The second note is a(n) " + note2.label + " (" + note2.name + "), which is " + note2.steps + " halfsteps from the root" );
		//console.log("gotcha");

	});


	btn.addEventListener('click', function(){
		
		genData(note1, true);
		genData(note2, false);

		playTone(note1);
		playTone(note2);

		setTimeout(function(){playTone(note1);}, 2000);
		setTimeout(function(){playTone(note2);}, 3500);
		
	});


	//action on form submit
	$(document).ready(function (){
		$('#myform').on('submit', function(e){
			e.preventDefault();
			console.log("Grabbed form stuff");
			var gimme = document.getElementById("useranswer").value;
			answer(gimme);
		});
	});


	function genQuestion(index){

		genData(true);
		genData(false);
		let question = new Question(note1,note2);
		thequiz.set_question(index,question);
		
		playTone(thequiz.get_question(index).note1);
		playTone(thequiz.get_question(index).note2);

		setTimeout(function(){playTone(note1);}, 2000);
		setTimeout(function(){playTone(note2);}, 3500);

	}


	//plays tone at given hertz
	function playTone(note){
		
		if (note.label == "root") {
			console.log("-----playing the " + note.label + ", " + note.name + ", " + "at " + note.hertz + " hertz");
		} else {
			console.log("-----playing " + note.name + " at " + note.hertz + " hertz");
		}

		var oscillator = audioctx.createOscillator();
		var gainNode = audioctx.createGain();

		oscillator.type = 'sawtooth';
		oscillator.frequency.setValueAtTime(note.hertz, audioctx.currentTime);

		//oscillator.connect(audioctx.destination);
		gainNode.connect(audioctx.destination);
		oscillator.connect(gainNode);

		oscillator.start(audioctx.currentTime);
		gainNode.gain.setValueAtTime(0.01, audioctx.currentTime);
		oscillator.stop(audioctx.currentTime + 1);
	}


	//generates note object data
	//initial should be set to true if root note
	function genData(initial){

		if (initial) {
			hertz = 440;
			label = "root";
			steps = randNum(-12,12);
			
			mod = steps;
		} else {
			number = randNum(0,9);
			
			hertz = note1.hertz
			label = intervals[number][1];
			steps = intervals[number][0];
			
			mod = steps + note1.steps;
		}

		while (11 < mod) {
			mod = mod - 12;
		}

		while (0 > mod) {
			mod = mod + 12;
		}
		
		name = notenames[mod];

		const a = Math.pow(2, 1/12)
	
		hertz = hertz * Math.pow(a, steps);
		

		if (initial) {
			note1 = new Note(name, label, hertz, steps);
			console.log("Got a(n) " + note1.name + ", which is the " + note1.label);
			
		} else {
			note2 = new Note(name, label, hertz, steps);
			console.log("Got a(n) " + note2.label + ", which is " + note2.steps + " halfsteps from the root" );
			
		}

		
		


	}

	//checks if given string matches note2 label
	function answer(answer) {
		var response = $('.response');

		if (answer==note2.label) {
			response.html("CORRECT");
		} else {
			response.html("NOPE");
		}

	}

	function randNum(min, max) {
  		return Math.floor(Math.random() * (max - min + 1) ) + min;
	}


	//oscillator.onended = function(){
	//	oscillator.disconnect(audioctx.destination);
	//	console.log("HEY");
	//}

	


</script>